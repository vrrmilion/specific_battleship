<?php

class Mainclass_battleships
{
        function __construct(){
            $mb = new morBoy();
            $ship_arr = ['L'=>1, 'I'=>1, 'D'=>2];

            $mb->createBoard(10,10);

            $mb->addShips($ship_arr);

            $mb->render();
        }
}

class morBoy{
    public $board;
    function createBoard($width, $height){
        for($i=0; $i<$width; $i++){
            for($j=0; $j<$height; $j++){
                $this->board[$i][$j] = 1;
            }
        }
    }

    function addShips($arr){
        $ships = new Ships();
        foreach ($arr as $k=>$v){
            for($i=0; $i<$v; $i++){
                $rotate = rand(1,4);
                $this->placeShipRandom($ships->newShip($k, $rotate));
            }
        }
    }

    function placeShipRandom($ship){
        //get start point
        $free_place = false;

        //limit 100 positions
        $i=0;
        while(!$free_place){
            $i++;
            if($i>100){
                die();
            }
            $rand_x = rand(0,9);
            $rand_y = rand(0,9);
            $free_place = $this->calculateFreeSpace($ship, $rand_x, $rand_y);
        }

        $this->placeShipBoard($ship, $rand_x, $rand_y);

    }

    function calculateFreeSpace($ship, $x, $y){
        $board = $this->board;

        foreach($ship as $row=>$val){
           $curr_y=$row+$y;
           foreach ($val as $col=>$v){
               $curr_x = $col+$x;
               //calculate free cell and cells around cell
               if(!empty($board[$curr_x][$curr_y]) && $board[$curr_x][$curr_y]==1
                   && ((!empty($board[$curr_x+1][$curr_y]) && $board[$curr_x+1][$curr_y]==1) || empty($board[$curr_x+1][$curr_y]))
                   && ((!empty($board[$curr_x-1][$curr_y]) && $board[$curr_x-1][$curr_y]==1) || empty($board[$curr_x-1][$curr_y]))
                   && ((!empty($board[$curr_x][$curr_y+1]) && $board[$curr_x][$curr_y+1]==1) || empty($board[$curr_x][$curr_y+1]))
                   && ((!empty($board[$curr_x][$curr_y-1]) && $board[$curr_x][$curr_y-1]==1) || empty($board[$curr_x][$curr_y-1]))
                   && ((!empty($board[$curr_x+1][$curr_y+1]) && $board[$curr_x+1][$curr_y+1]==1) || empty($board[$curr_x+1][$curr_y+1]))
                   && ((!empty($board[$curr_x-1][$curr_y-1]) && $board[$curr_x-1][$curr_y-1]==1) || empty($board[$curr_x-1][$curr_y-1]))
                   && ((!empty($board[$curr_x-1][$curr_y+1]) && $board[$curr_x-1][$curr_y+1]==1) || empty($board[$curr_x-1][$curr_y+1]))
                   && ((!empty($board[$curr_x+1][$curr_y-1]) && $board[$curr_x+1][$curr_y-1]==1) || empty($board[$curr_x+1][$curr_y-1]))){


               }else{
                    return false;
               }
           }
        }

        return true;
    }

    function placeShipBoard($ship, $x, $y){
        foreach($ship as $row=>$val){
           $curr_y=$row+$y;
           foreach ($val as $col=>$v){
               $curr_x = $col+$x;
               if($v!=1) {//for L ships

                   $this->board[$curr_x][$curr_y] = 3;
                   if (!empty($this->board[$curr_x + 1][$curr_y]) && $this->board[$curr_x + 1][$curr_y] != 3) {
                       $this->board[$curr_x][$curr_y] = $v;
                   }
                   if (!empty($this->board[$curr_x - 1][$curr_y]) && $this->board[$curr_x - 1][$curr_y] != 3) {
                       $this->board[$curr_x][$curr_y] = $v;
                   }
                   if (!empty($this->board[$curr_x][$curr_y + 1]) && $this->board[$curr_x][$curr_y + 1] != 3) {
                       $this->board[$curr_x][$curr_y] = $v;
                   }
                   if (!empty($this->board[$curr_x][$curr_y - 1]) && $this->board[$curr_x][$curr_y - 1] != 3) {
                       $this->board[$curr_x][$curr_y] = $v;
                   }
               }
           }
        }
    }

    function render(){
         echo '<!DOCTYPE html>';
            echo "<HTML lang='".LANG."'>";
            echo "<head>
                    <meta http-equiv='Content-Type' content='text/html; charset=utf-8' />
                    <meta name='keywords' content=''>
                    <meta name='discription' content=''>
                    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
                    <META NAME='Robots' CONTENT='all'>
                    <meta name='author' content='Vadim Tjurin' />

            ";
               echo "<style>
                    table {
                      border-collapse: collapse;
                      border-spacing: 0;
                    }
                    .board-holder{
                        display: block;
                        float:left;
                        position: relative;
                        width:500px;

                        background: url(/images/ocean.jpg) no-repeat center;
                        background-size: auto 100%;
                    }
                    .board td{
                        width: 50px;
                        height: 50px;
                        border:1px solid rgba(255,255,255,0.3);
                        text-align: center;                 
                    }
                    .board .ship{
                       background: green;
                       border: 1px double #000;
                    }
                    .board .ship_2{                      
                       border-top-color: green;
                       border-bottom-color: green;
                    } 
                    .board .ship_3{
                        border-top-color: green;
                        border-left-color: green;
                    } 
                    .board .ship_4{
                        border-right-color: green;
                    } 
                    .board .ship_5{
                        border-bottom-color: green;
                        border-left-color: green;
                    }
                    .board .ship_6{
                        border-bottom-color: green;
                    }
                    .board .ship_7{
                        border-right-color: green;
                    }
                    .board .ship_8{
                        border-top-color: green;
                    }
                    .board .ship_9{
                       border-bottom-color: green;
                       border-right-color: green;
                    }
                    .board .ship_10{
                       border-top-color: green;
                       border-right-color: green;
                    }
                    .board .ship_11{
                       border-left-color: green;
                       border-right-color: green;
                    }
                    .board .ship_13{
                       border-left-color: green;
                    }
                    h1{
                        text-align: center;
                    }
                    .contain-md {
                      max-width: 992px;
                      margin-left: auto;
                      margin-right: auto;
                    }
                    .btn {
                      display: inline-block;
                      margin-bottom: 0;
                      font-weight: normal;
                      text-align: center;
                      vertical-align: middle;
                      touch-action: manipulation;
                      cursor: pointer;
                      background-image: none;
                      border: 1px solid transparent;
                      border-radius: 22px;
                      white-space: nowrap;
                      padding: 9px 14px;
                      font-size: 13px;
                      line-height: 1.846153846;
                      -webkit-user-select: none;
                      -moz-user-select: none;
                      -ms-user-select: none;
                      user-select: none;
                      -webkit-transition: all 0.250s linear;
                      -o-transition: all 0.25s linear;
                      transition: all 0.25s linear;
                      margin-top:15px;
                    }
                    .btn-primary {
                      color: #fff;
                      background-color: #1e3953;
                      border-color: #1e3953;
                    }
                    .btn-primary:hover {
                      color: #fff;
                      background-color: #c61000;
                      border-color: #c61000;
                    }
                    .interface{
                        text-align: center;
                    }
                    .board td.hit{
                        background-color: red;
                    }
                    .board td.hit-empty{
                        background-color: yellow;
                    }
                    
                    .success{
                        display: block;
                        padding: 20px;
                        text-align: center;
                        color: red;
                        font-size: 26pt;
                    }
                                       
                </style>";
            echo "</head>";
            echo "<body>";
                echo "<h1>"._('Battleship`s')."</h1>";
                echo "<div class='contain-md'>";
                    echo "<div class='board-holder pull-left'>";
                        echo "<table class='board'>";
                        foreach ($this->board as $row=>$r){
                            echo "<tr>";
                            foreach ($r as $column=>$c){
                                $c > 1 ? $class = 'ship' : $class = '';
                                echo "<td class='ship_".$c." ".$class."' data-x='".$column."' data-y='".$row."' data-status='".$class."'></td>";
                            }
                            echo "</tr>";
                        }
                        echo "</table>";
                    echo "</div>";
                    echo "<div class='interface'>
                        <h2>"._('Welcome to ballteship`s')."</h2>
                        <div class='game-description'>"._('You can`t do much here, just press the button to make turn')."</div>
                        <div class='btn btn-primary btn-fire'>"._('Файйаа')."</div>
                        <div class='battle-log'>
                            
                        </div>
                    </div>";
                echo "</div>";
                echo "<script src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js'></script>";
                echo "<script>                  
                    function makeTurn(){
                        var turn_accepted = 'no';
                        var limit = 1;
                        while(turn_accepted=='no'){
                            limit++;
                            if(limit>200){
                                turn_accepted=='yes';
                                $('.game-description').append('<div class=\"error\">" . _('Error happend') . "</div>');
                            }
                            var pos_x = Math.floor(Math.random() * 10);
                            var pos_y = Math.floor(Math.random() * 10);
                           
                            
                            var cell_status = $('.board [data-x=\"' + pos_x + '\"][data-y=\"' + pos_y + '\"]').data('status');
                            
                             console.log(pos_x+' '+pos_y + ' ' + cell_status);
                            
                            if(cell_status == 'ship'){
                                //unhitted ship
                                $('.board [data-x=\"' + pos_x + '\"][data-y=\"' + pos_y + '\"]').data('status', 'hit').addClass('hit').removeClass('ship');
                                turn_accepted = 'yes';
                                result_text = 'Hit!!!'
                                checkEndOfGame();
                            }else if(cell_status == ''){
                                //empty cell
                                $('.board [data-x=\"' + pos_x + '\"][data-y=\"' + pos_y + '\"]').data('status', 'hit-empty').addClass('hit-empty').removeClass('ship');
                                 turn_accepted = 'yes';
                                 result_text = 'Missed'
                                 checkEndOfGame();
                            }else{
                                 turn_accepted = 'no';
                            }
                        }    
                        $('.battle-log').append('<div>Move x:' + pos_x + ', y:' + pos_y + ' - ' + result_text + '</div>');
                    }
                    
                    function checkEndOfGame(){
                        var hasShips = false;
                        $('.board td').each(function(){
                            if($(this).hasClass('ship')){
                                hasShips = true;
                            }
                        })
                        
                        if(hasShips==false){                        
                            $('.btn-fire').unbind('click');
                            $('.game-description').append('<div class=\"success\">" . _('Game is over') . "</div>');
                        }
                    }
                    
                    $('.btn-fire').on('click', function(){
                        makeTurn();
                    })
                </script>";
            echo "</body>";
        echo "</html>";

    }
}

class Ships{
    function newShip($type, $rotation){
        switch($type) {
            case 'L':
                switch ($rotation){
                    case '1':
                        $ship = [
                            [1,7],
                            [1,11],
                            [6,3]
                        ];
                        break;
                    case '2':
                        $ship = [
                            [6,2,10],
                            [1,1,13]
                        ];
                        break;
                    case '3':
                         $ship = [
                            [9,8],
                            [11,1],
                            [13,1]
                        ];
                        break;
                     case '4':
                        $ship = [
                            [7,1,1],
                            [5,2,8]
                        ];
                        break;
                }

                break;
            case 'I':
                 switch ($rotation) {
                     case '1':
                         $ship = [
                             [4],
                             [11],
                             [11],
                             [13]
                         ];
                         break;
                     case '2':
                         $ship = [[6,2,2,8]];
                         break;
                     case '3':
                         $ship = [
                             [4],
                             [11],
                             [11],
                             [13]
                         ];
                         break;
                     case '4':
                         $ship = [[6,2,2,8]];
                         break;
                 }
                break;
            case 'D':
                    $ship = [
                            [12]
                        ];
                break;
        }
        return $ship;
    }


}
